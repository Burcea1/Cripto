@model CRYPTO_Burcea.DAL.OperatiuneAR

@{
    ViewBag.Title = "Operatiune noua";
}

<h2>Operațiune nouă</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DataOperatiune, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataOperatiune, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DataOperatiune, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdContinutPortofel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdContinutPortofel, new SelectList(Model.ColectieContinutPortofele, "Id", "Moneda.DenumireMoneda"), "Selectati moneda ", htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.IdContinutPortofel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipOperatiune, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TipOperatiune, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.TipOperatiune, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SumaOperatiune, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SumaOperatiune, new { htmlAttributes = new { @class = "form-control", @placeholder = "Suma operatiune" } })
                @Html.ValidationMessageFor(model => model.SumaOperatiune, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.TipOperatiune.Equals("Alimentare"))
                {
                    <input type="submit" value="Alimentează" class="btn btn-success" />
                }
                else if (Model.TipOperatiune.Equals("Retragere"))
                {
                    <input type="submit" value="Retrage" class="btn btn-warning" />
                }

            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Înapoi", "Detalii", "Portofel", new { idPortofel = ViewBag.idP }, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
