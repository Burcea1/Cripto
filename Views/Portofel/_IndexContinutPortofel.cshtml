@using PagedList;
@using PagedList.Mvc;
@model IPagedList<CRYPTO_Burcea.DAL.ContinutPortofel>



<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>


<div class="table-bordered">
    <h4>&nbsp;Căutare</h4>
    @*@using (Html.BeginForm("IndexContinutPortofel", "Portofel", new { ViewBag.id }, FormMethod.Get))
        {
            <span>&nbsp;Data: </span>@Html.TextBox("searchData")
            <span>&nbsp;Moneda: </span>@Html.TextBox("searchMoneda")
            <input type="submit" class="btn btn-primary" value="Caută" />
        }
        <br />*@

    @using (Ajax.BeginForm("IndexContinutPortofel", "Portofel", new { idPortofel = ViewBag.id }, new AjaxOptions()
    {
        HttpMethod = "GET",
        UpdateTargetId = "divContinutPortofel",
        InsertionMode = InsertionMode.Replace
    }))
    {
        <span>&nbsp;Data: </span>@Html.TextBox("searchData", null, new { @class = "form-control datepicker" })
        <span>&nbsp;Moneda: </span>@Html.TextBox("searchMoneda", null, new { @class = "form-control" })
        <input type="submit" class="btn btn-primary" value="Caută" />
    }
    <br />
</div>

<link href="~/Content/bootstrap-datepicker3.min.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
@*<script type="text/javascript">
        $(document.ready(function () {
            // Fiecare element cu clasa date-picker se transfrma int-un element date-piker
            $('#searchData').datetimepicker();
        })
    </script>*@

<script>
    $('.datepicker').datepicker({
        format: 'yyyy-mm-dd'
    });
</script>


<br />


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().DataDeschidere)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().SumaDetinuta)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Moneda.DenumireMoneda)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Portofel.DenumirePortofel)
        </th>
        <th>
            @Html.ActionLink("Adaugă monedă la portofel", "AdaugaContinutPortofel", "Portofel", new { idPortofel = ViewBag.id }, new { @class = "btn btn-success" })
        </th>
    </tr>
    @{
        List<String> sume = ViewBag.ListaSume;
        int i = 0;
    } 
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DataDeschidere)
            </td>
            <td style="color:blue">
                @*@Html.DisplayFor(modelItem => item.SumaDetinuta)*@
                @sume[i]
                @{
                    i++;
                }
            </td>
            <td style="color:blue">
                @Html.DisplayFor(modelItem => item.Moneda.DenumireMoneda)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Portofel.DenumirePortofel)
            </td>
            <td>
                @Html.ActionLink("Alimentare", "AdaugaOperatiune", "Portofel", new { idCPortofel = item.Id, tipO = "Alimentare" }, new { @class = "btn btn-success" })
                @Html.ActionLink("Retragere", "AdaugaOperatiune", "Portofel", new { idCPortofel = item.Id, tipO = "Retragere" }, new { @class = "btn btn-warning" })
                <br />
                @Html.ActionLink("Transfer", "AdaugaTransfer", "Portofel", new { idCPortofel = item.Id }, new { @class = "btn btn-primary" })
                <br />
                @Html.ActionLink("Cumpărare", "Adauga", "Tranzactionare", new { idCPortofel = item.Id, tipT = "Cumparare" }, new { @class = "btn btn-success" })
                @Html.ActionLink("Vânzare", "Adauga", "Tranzactionare", new { idCPortofel = item.Id, tipT = "Vanzare" }, new { @class = "btn btn-warning" })
                @using (Html.BeginForm("StergeContinutPortofel", "Portofel", new { idCPortofel = item.Id }))
                {
                    <input type="submit" class="btn btn-danger" value="Închide cont" onclick="return confirm('Sunteți sigur că ștergeți moneda din portofel ?');" />
                }
            </td>
        </tr>
    }

</table>

Pagina @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) din @Model.PageCount
@Html.PagedListPager(Model, pagina => Url.Action("IndexContinutPortofel", "Portofel", new { idPortofel = ViewBag.id, pagina, searchData = Request.QueryString["searchData"], searchMoneda = Request.QueryString["searchMoneda"] }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
    {
        HttpMethod = "GET",
        UpdateTargetId = "divContinutPortofel",
        InsertionMode = InsertionMode.Replace
    }))
