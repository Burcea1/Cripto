@using PagedList;
@using PagedList.Mvc;
@model IPagedList<CRYPTO_Burcea.DAL.Cur>
@using Microsoft.AspNet.Identity
@using CRYPTO_Burcea.BLL

@{
    BLLUtilizator oBLL = new BLLUtilizator();
    List<decimal> diferente = ViewBag.Diferente;
}

<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>


<div class="table-bordered">
    <h4>&nbsp;Căutare</h4>
    @*@using (Html.BeginForm("IndexCurs", "Moneda", new { ViewBag.id }, FormMethod.Get))
        {
            <span>&nbsp;Data: </span>@Html.TextBox("searchData")
            <input type="submit" class="btn btn-primary" value="Caută" />
        }
        <br />*@

    @using (Ajax.BeginForm("IndexCurs", "Moneda", new { idMoneda = ViewBag.id }, new AjaxOptions()
    {
        HttpMethod = "GET",
        UpdateTargetId = "divCursuri",
        InsertionMode = InsertionMode.Replace
    }))
    {
        <span>&nbsp;Data: </span>@Html.TextBox("searchData", null, new { @class = "form-control datepicker" })
        <input type="submit" class="btn btn-primary" value="Caută" />
    }
    <br />
</div>

<link href="~/Content/bootstrap-datepicker3.min.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
@*<script type="text/javascript">
        $(document.ready(function () {
            // Fiecare element cu clasa date-picker se transfrma int-un element date-piker
            $('#searchData').datetimepicker();
        })
    </script>*@

<script>
    $('.datepicker').datepicker({
        format: 'yyyy-mm-dd'
    });
</script>


<br />
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().DataCurs)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().OraCurs)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Curs)
        </th>
        <th>
            Diferență
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Moneda.DenumireMoneda)
        </th>
        <th>
            @if (oBLL.EsteAdmin(User.Identity.GetUserName()))
            {
                @Html.ActionLink("Adaugă curs", "AdaugaCurs", "Moneda", new { idMoneda = ViewBag.id }, new { @class = "btn btn-success" })
            }

        </th>
    </tr>

    @{ 
        int i = 0;
    }
    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.DataCurs)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.OraCurs)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Curs)
    </td>
    @if (diferente[i] > 0)
    {
        <td style="color:green">
            @diferente[i]  
            <img src="~/Imagini/green.png" style="width:20px; height:20px" />
            @{ i++;}
        </td>
    }
    else if (diferente[i] < 0)
    {
        <td style="color:red">
            @diferente[i]
            <img src="~/Imagini/red.png" style="width:20px; height:20px" />
            @{ i++;}
        </td>
    }
    else
    {
        <td>
            @diferente[i]
            @{ i++; }
        </td>
    }
    <td>
        @Html.DisplayFor(modelItem => item.Moneda.DenumireMoneda)
    </td>
    <td>
        @if (oBLL.EsteAdmin(User.Identity.GetUserName()))
        {
            using (Html.BeginForm("StergeCurs", "Moneda", new { idCurs = item.Id }))
            {
                <input type="submit" class="btn btn-danger" value="Șterge" onclick="return confirm('Sunteți sigur că ștergeți cursul ?');" />
            }
        }

    </td>
</tr>
    }

</table>

Pagina @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) din @Model.PageCount
@Html.PagedListPager(Model, pagina => Url.Action("IndexCurs", "Moneda", new { idMoneda = ViewBag.id, pagina, searchData = Request.QueryString["searchData"] }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
    {
        HttpMethod = "GET",
        UpdateTargetId = "divCursuri",
        InsertionMode = InsertionMode.Replace
    }))
